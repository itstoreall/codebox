{"version":3,"sources":["components/Markup/Information/Information.module.scss","views/viewsStyles.js","components/Markup/History/HistoryStyles.js","components/Markup/History/Icons.jsx","components/Markup/History/Buttons.jsx","components/Markup/History/History.jsx","components/Markup/Information/InformationBtn.jsx","components/Markup/Information/InformationLists/CurrentList.jsx","components/Markup/Information/InformationLists/GeneralList.jsx","components/Markup/Information/InformationLists/InformationLists.jsx","components/Markup/Information/Information.jsx","components/Markup/InfoPanel/InfoPanel.jsx","components/Markup/Article/Article.jsx","components/Markup/InfoPanel/InfoPanel.module.scss","components/Markup/Article/Article.module.scss","graphql/mutation/user.js","components/Admin/Login.jsx","components/Admin/Logout.jsx","components/Admin/UpdateViewButton.jsx","components/Admin/DeleteViewButton.jsx","components/Admin/ViewItemCard.jsx","components/Admin/ViewList.jsx","components/Admin/CreateViewButton.jsx","components/Admin/AdminDashboardContent.jsx","components/Admin/AdminDashboard.jsx","views/AdminView.jsx"],"names":["module","exports","useStyles","createUseStyles","viewTitle","marginBottom","fontSize","color","refs","primeryBlackColor","History","display","alignItems","width","homeButton","cursor","fill","primaryBlackColor50","primaryBlackColor75","homeIcon","fromButton","codebox","arrowIcon","marginLeft","marginRight","height","primaryBlackColor25","currentPathname","whiteSpace","overflow","textOverflow","ArrowIcon","s","className","href","sprite","HomeIcon","path","FromButton","withRouter","props","history","stateFrom","fromPathname","createPathname","type","onClick","push","HomeButton","location","pathname","state","from","substr","includes","split","InformationBtn","showInformation","toggleInformationModal","Information__btn","CurrentList","information","Information__currentlist","Information__item","Information__itemKey","nesting","view","title","feature","GeneralList","localState","useContext","Context","Information__title","Information__generalList","Information__generalItem","Information__generalValueWrap","Information__generalKey","Information__generalValue","quantity","views","features","InformationLists","Information__listWrap","useState","setShowInformation","setInformation","setLocalState","informationData","useDataIterator","useEffect","Information","InfoPanel","infoPanel","Article","children","LOGIN","gql","Login","setCodeboxToken","userRole","setUserRole","loginUsername","setLoginUsername","loginPassword","setLoginPassword","loginError","setLoginError","useMutation","variables","username","password","gqlLogin","login","e","a","preventDefault","data","console","log","localStorage","setItem","token","message","toggleInputs","role","Login__form","onSubmit","Login__title","padding","margin","textAlign","border","primaryTextColor","borderRadius","placeholder","value","onChange","target","Login__error","Login__toggleLink","Logout","position","top","right","UpdateViewButton","toggleModal","DeleteViewButton","id","refetch","DELETE_VIEW","deleteGqlView","deleteView","ViewItemCard","showModal","setShowModal","updateGqlViewTitle","setUpdateGqlViewTitle","updateGqlViewPath","setUpdateGqlViewPath","UPDATE_VIEW","input","updateGqlView","updateView","ViewList__cardModal","GetOneView__form","cardModal__contentRow","activeLinkColor","backgroundColor","outline","cardModal__btnWrap","ViewList__card","card__contentRow","ViewList__btnWrap","ViewList","allViews","ViewList__wrap","ViewList__list","map","ViewList__item","CreateViewButton","toggleAppModal","transform","AdminDashboardContent","AdminDashboard__contentWrap","AdminDashboard","codeboxToken","loading","useMemo","getItem","AdminDashboard__loadingWrap"],"mappings":"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","file":"static/js/Admin.15cd3f82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Information\":\"Information_Information__29eRd\",\"Information__btn\":\"Information_Information__btn__2QVzF\",\"Information__listWrap\":\"Information_Information__listWrap__1ICll\",\"Information__title\":\"Information_Information__title__2ouS9\",\"Information__currentlist\":\"Information_Information__currentlist__9v-hJ\",\"Information__item\":\"Information_Information__item__2TSkr\",\"Information__itemKey\":\"Information_Information__itemKey__Vszyb\",\"Information__generalList\":\"Information_Information__generalList__3lcxG\",\"Information__generalValueWrap\":\"Information_Information__generalValueWrap__1G_MX\",\"Information__generalKey\":\"Information_Information__generalKey__2QNgG\",\"Information__generalValue\":\"Information_Information__generalValue__2p8hD\"};","import { createUseStyles } from 'react-jss';\nimport refs from '../styles/refs';\n\nexport const useStyles = createUseStyles(() => {\n  return {\n    viewTitle: {\n      marginBottom: 30,\n      fontSize: 24,\n      color: refs.primeryBlackColor,\n    },\n  };\n});\n","import { createUseStyles } from 'react-jss';\nimport refs from '../../../styles/refs';\n\nexport const useStyles = createUseStyles(() => {\n  return {\n    History: {\n      display: 'flex',\n      alignItems: 'center',\n      width: 'calc(100% - 50px)',\n      // color: refs.primaryBlackColor50,\n      // fontSize: 14,\n    },\n\n    homeButton: {\n      cursor: 'pointer',\n      fill: refs.primaryBlackColor50,\n\n      '&:hover svg': {\n        fill: refs.primaryBlackColor75,\n      },\n    },\n\n    homeIcon: {\n      fill: refs.primaryBlackColor50,\n    },\n\n    fromButton: {\n      fontSize: 14,\n      cursor: 'pointer',\n\n      '& span': {\n        color: refs.primaryBlackColor50,\n      },\n\n      '&:hover span': {\n        color: refs.primaryBlackColor75,\n      },\n    },\n\n    codebox: {\n      fontSize: 14,\n      color: refs.primaryBlackColor50,\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n\n    arrowIcon: {\n      marginLeft: 10,\n      marginRight: 10,\n      width: 14,\n      height: 15,\n      fill: refs.primaryBlackColor25,\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n\n    currentPathname: {\n      color: refs.primaryBlackColor50,\n      fontSize: 14,\n\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n  };\n});\n","import { useStyles } from './HistoryStyles';\nimport sprite from '../../../svg/sprite.svg';\n\nexport const ArrowIcon = () => {\n  const s = useStyles();\n\n  return (\n    <span className={s.arrowIcon}>\n      <svg width=\"14\" height=\"14\">\n        <use href={sprite + '#icon-arrow-right'}></use>\n      </svg>\n    </span>\n  );\n};\n\nexport const HomeIcon = ({ path }) => {\n  const s = useStyles();\n\n  return (\n    <span className={path === '/' ? s.homeIcon : null}>\n      <svg width=\"13\" height=\"13\">\n        <use href={sprite + '#icon-home'}></use>\n      </svg>\n    </span>\n  );\n};\n\n// export default ArrowIcon;\n","import { withRouter } from 'react-router-dom';\nimport { useStyles } from './HistoryStyles';\nimport { HomeIcon } from './Icons';\n\nexport const FromButton = withRouter(({ props, history }) => {\n  const s = useStyles();\n  const { stateFrom, fromPathname, createPathname } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={s.fromButton}\n      onClick={() => history.push(stateFrom)}\n    >\n      {createPathname(fromPathname)}\n    </button>\n  );\n});\n\nexport const HomeButton = withRouter(({ history, location }) => {\n  const s = useStyles();\n\n  return location.pathname !== '/' ? (\n    <button\n      type=\"button\"\n      className={s.homeButton}\n      onClick={() => history.push('/')}\n    >\n      <HomeIcon path={location.pathname} />\n    </button>\n  ) : (\n    <HomeIcon path={location.pathname} />\n  );\n});\n","import { withRouter } from 'react-router-dom';\nimport { useStyles } from './HistoryStyles';\nimport { ArrowIcon } from './Icons';\nimport { HomeButton, FromButton } from './Buttons';\n\nconst History = ({ history, location }) => {\n  // console.log('History location --->', location);\n\n  const s = useStyles();\n  const stateFrom = location.state?.from;\n  const fromPathname = location.state?.from.pathname.substr(1);\n  const currentPathname = location.pathname.substr(1);\n\n  const createPathname = pathname => {\n    return (\n      pathname && (\n        <span\n          className={\n            pathname === currentPathname\n              ? s.currentPathname\n              : pathname === fromPathname && null\n          }\n        >\n          {pathname?.includes('/') ? pathname?.split('/')[1] : pathname}\n        </span>\n      )\n    );\n  };\n\n  return (\n    <div className={s.History}>\n      <HomeButton />\n      <ArrowIcon />\n      {location.pathname !== '/' ? (\n        <FromButton props={{ stateFrom, fromPathname, createPathname }} />\n      ) : (\n        <span className={s.codebox}>{'codebox'}</span>\n      )}\n      {fromPathname && <ArrowIcon />}\n      {createPathname(currentPathname)}\n    </div>\n  );\n};\n\nexport default withRouter(History);\n","import s from './Information.module.scss';\nimport sprite from '../../../svg/sprite.svg';\n\nconst InformationBtn = ({ showInformation, toggleInformationModal }) => {\n  return showInformation ? (\n    <button className={s.Information__btn} onClick={toggleInformationModal}>\n      <svg width=\"14\" height=\"14\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </button>\n  ) : (\n    <button className={s.Information__btn} onClick={toggleInformationModal}>\n      <svg width=\"18\" height=\"18\">\n        <use href={sprite + '#icon-info'}></use>\n      </svg>\n    </button>\n  );\n};\n\nexport default InformationBtn;\n","import s from '../Information.module.scss';\n\nconst CurrentList = ({ information }) => {\n  return (\n    <ul className={s.Information__currentlist}>\n      <li className={s.Information__item}>\n        <span className={s.Information__itemKey}>{`View: `}</span>\n        {information.nesting !== 0 ? information?.view?.title : 'Home'}\n      </li>\n      {information.nesting === 2 && (\n        <li className={s.Information__item}>\n          <span className={s.Information__itemKey}>{`Feature: `}</span>\n          {information.feature.title}\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default CurrentList;\n","import { useContext } from 'react';\nimport s from '../Information.module.scss';\nimport Context from '../../../../Context';\n\nconst GeneralList = () => {\n  const { localState } = useContext(Context);\n\n  return (\n    <>\n      <span className={s.Information__title}>General:</span>\n\n      <ul className={s.Information__generalList}>\n        <li className={s.Information__generalItem}>\n          <div className={s.Information__generalValueWrap}>\n            <span className={s.Information__generalKey}>\n              Views:{' '}\n              <span className={s.Information__generalValue}>\n                {localState.quantity.views}\n              </span>\n            </span>\n            <span className={s.Information__generalKey}>\n              Features:{' '}\n              <span className={s.Information__generalValue}>\n                {localState.quantity.features - 1}\n              </span>\n            </span>\n          </div>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default GeneralList;\n","import s from '../Information.module.scss';\nimport CurrentList from './CurrentList';\nimport GeneralList from './GeneralList';\n\nconst InformationLists = ({ information }) => {\n  return (\n    <div className={s.Information__listWrap}>\n      <CurrentList information={information} />\n      <GeneralList />\n    </div>\n  );\n};\n\nexport default InformationLists;\n","import { useState, useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Context from '../../../Context';\nimport s from './Information.module.scss';\nimport InformationBtn from './InformationBtn';\nimport InformationLists from './InformationLists';\nimport useDataIterator from '../../../hooks/useDataIterator';\n\nconst Information = ({ location }) => {\n  const [showInformation, setShowInformation] = useState(false);\n  const [information, setInformation] = useState(null);\n  const { localState, setLocalState, views } = useContext(Context);\n  const informationData = useDataIterator(location, views);\n\n  useEffect(() => setInformation(informationData), [location.pathname]);\n\n  useEffect(\n    () => setLocalState({ ...localState, ...information }),\n    [information],\n  );\n\n  const toggleInformationModal = () => setShowInformation(!showInformation);\n\n  return (\n    <div className={s.Information}>\n      <InformationBtn\n        showInformation={showInformation}\n        toggleInformationModal={toggleInformationModal}\n      ></InformationBtn>\n\n      {showInformation && <InformationLists information={information} />}\n    </div>\n  );\n};\n\nexport default withRouter(Information);\n","import s from './InfoPanel.module.scss';\nimport History from '../History';\nimport Information from '../../Markup/Information';\n\nconst InfoPanel = () => {\n  return (\n    <div className={s.infoPanel}>\n      <History />\n      <Information />\n    </div>\n  );\n};\n\nexport default InfoPanel;\n","import s from './Article.module.scss';\n\nconst Article = ({ children }) => (\n  <article className={s.Article}>{children}</article>\n);\n\nexport default Article;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoPanel\":\"InfoPanel_infoPanel__2Wnih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Article\":\"Article_Article__3XQP8\"};","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      username\n      email\n      token\n      role\n      createdAt\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CustomButton, CustomInput } from './uiElements';\nimport { LOGIN } from '../../graphql/mutation/user';\nimport s from './Admin.module.scss';\nimport refs from '../../styles/refs';\n\nconst Login = ({ setCodeboxToken }) => {\n  const [userRole, setUserRole] = useState('guest');\n  const [loginUsername, setLoginUsername] = useState('Guest');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const [gqlLogin] = useMutation(LOGIN, {\n    variables: {\n      username: loginUsername,\n      password: loginPassword,\n    },\n  });\n\n  const login = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await gqlLogin({\n        variables: {\n          username: loginUsername,\n          password: loginPassword,\n        },\n      });\n\n      console.log('login token:', data.login);\n\n      if (data) {\n        localStorage.setItem('codeboxToken', data.login.token);\n        setCodeboxToken(data.login.token);\n      }\n\n      setLoginUsername('');\n      setLoginPassword('');\n      setLoginError('');\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > login:', err.message);\n      setLoginError(err.message);\n    }\n  };\n\n  const toggleInputs = role => {\n    console.log('role:', role);\n    setUserRole(role);\n    setLoginUsername(role === 'admin' ? 'Admin' : role === 'guest' && 'Guest');\n  };\n\n  return (\n    <div className={s.Login}>\n      <form className={s.Login__form} onSubmit={e => login(e)}>\n        <h2 className={s.Login__title}>\n          {userRole === 'guest' ? 'Guest' : userRole === 'admin' && 'Admin'}\n        </h2>\n\n        {userRole === 'guest' ? (\n          <CustomInput\n            className={'admin-login-password-input'}\n            padding={'15px'}\n            margin={'0 0 30px'}\n            width={'100%'}\n            textAlign={'center'}\n            border={`1px solid ${refs.primaryTextColor}`}\n            borderRadius={'4px'}\n            placeholder={'password'}\n            value={loginPassword}\n            onChange={e => {\n              setLoginPassword(e.target.value);\n              setLoginError('');\n            }}\n          />\n        ) : (\n          userRole === 'admin' && (\n            <CustomInput\n              className={'admin-login-password-input'}\n              padding={'15px'}\n              margin={'0 0 30px'}\n              width={'100%'}\n              textAlign={'center'}\n              border={`1px solid ${refs.primaryTextColor}`}\n              borderRadius={'4px'}\n              placeholder={'password'}\n              value={loginPassword}\n              onChange={e => setLoginPassword(e.target.value)}\n            />\n          )\n        )}\n\n        <span className={s.Login__error}>{loginError}</span>\n\n        <CustomButton\n          className={'admin-login-btn'}\n          display={'block'}\n          padding={'15px'}\n          margin={'0 0 30px'}\n          width={'100%'}\n          borderRadius={'4px'}\n          type={'submit'}\n        >\n          Login\n        </CustomButton>\n\n        {userRole === 'guest' ? (\n          <sapn\n            className={s.Login__toggleLink}\n            onClick={() => toggleInputs('admin')}\n          >\n            Administrator\n          </sapn>\n        ) : (\n          userRole === 'admin' && (\n            <sapn\n              className={s.Login__toggleLink}\n              onClick={() => toggleInputs('guest')}\n            >\n              Guest\n            </sapn>\n          )\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { CustomButton } from './uiElements';\n\nconst Logout = ({ setCodeboxToken }) => {\n  const removeToken = () => {\n    localStorage.setItem('codeboxToken', '');\n    setCodeboxToken('');\n  };\n\n  return (\n    <CustomButton\n      className={'admin-logout-btn'}\n      position={'absolute'}\n      top={'-62px'}\n      right={0}\n      padding={'6px 20px'}\n      borderRadius={'4px'}\n      onClick={removeToken}\n    >\n      Logout\n    </CustomButton>\n  );\n};\n\nexport default Logout;\n","import { CustomButton } from './uiElements';\nimport sprite from '../../svg/sprite.svg';\n\nconst UpdateViewButton = ({ toggleModal }) => (\n  <CustomButton\n    className={'admin-delete-view-button-btn'}\n    margin={'0 0 10px 0'}\n    width={'20px'}\n    height={'20px'}\n    borderRadius={'4px'}\n    onClick={() => toggleModal(true)}\n  >\n    <svg width=\"9\" height=\"9\" fill=\"white\">\n      <use href={sprite + '#icon-edit'}></use>\n    </svg>\n  </CustomButton>\n);\n\nexport default UpdateViewButton;\n","import { useMutation } from '@apollo/client';\nimport { CustomButton } from './uiElements';\nimport { DELETE_VIEW } from '../../graphql/mutation/view';\nimport sprite from '../../svg/sprite.svg';\n\nconst DeleteViewButton = ({ id, refetch }) => {\n  const [deleteGqlView] = useMutation(DELETE_VIEW, {\n    variables: { id: id },\n  });\n\n  const deleteView = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await deleteGqlView();\n\n      console.log('deleted id !!!', data.deleteView);\n\n      refetch();\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > deleteView:', err.message);\n    }\n  };\n\n  return (\n    <CustomButton\n      className={'admin-delete-view-button-btn'}\n      width={'20px'}\n      height={'20px'}\n      borderRadius={'4px'}\n      onClick={e => deleteView(e)}\n    >\n      <svg width=\"9\" height=\"9\" fill=\"white\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </CustomButton>\n  );\n};\n\nexport default DeleteViewButton;\n","import { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport s from './Admin.module.scss';\nimport { CardModalInput, CustomButton } from './uiElements';\nimport UpdateViewButton from './UpdateViewButton';\nimport DeleteViewButton from './DeleteViewButton';\nimport { UPDATE_VIEW } from '../../graphql/mutation/view';\nimport refs from '../../styles/refs';\n\nconst ViewItemCard = ({ view, refetch }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [updateGqlViewTitle, setUpdateGqlViewTitle] = useState('');\n  const [updateGqlViewPath, setUpdateGqlViewPath] = useState('');\n\n  useEffect(() => {\n    setUpdateGqlViewTitle(view.title);\n    setUpdateGqlViewPath(view.path);\n  }, []);\n\n  const [updateGqlView] = useMutation(UPDATE_VIEW, {\n    variables: {\n      id: view.id,\n      input: { title: updateGqlViewTitle, path: updateGqlViewPath },\n    },\n  });\n\n  const updateView = async e => {\n    e.preventDefault();\n    console.log('id:', view.id);\n\n    try {\n      const { data } = await updateGqlView();\n\n      console.log('updateView !!!', data.updateView);\n\n      refetch();\n      toggleModal(false);\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > updateView:', err.message);\n    }\n  };\n\n  const toggleModal = value => setShowModal(value);\n\n  return (\n    <>\n      {!showModal ? (\n        <>\n          <div className={s.ViewList__card}>\n            <div className={s.card__contentRow}>id: {view?.id}</div>\n            <div className={s.card__contentRow}>title: {view?.title}</div>\n            <div className={s.card__contentRow}>path: {view?.path}</div>\n          </div>\n\n          <div className={s.ViewList__btnWrap}>\n            <UpdateViewButton toggleModal={toggleModal} />\n            <DeleteViewButton id={view?.id} refetch={refetch} />\n          </div>\n        </>\n      ) : (\n        <div className={s.ViewList__cardModal}>\n          <form className={s.GetOneView__form} onSubmit={e => updateView(e)}>\n            <div className={s.cardModal__contentRow}>id: {view.id}</div>\n            <div className={s.cardModal__contentRow}>\n              {`title: `}\n              {\n                <CardModalInput\n                  className={'admin-update-view-title-btn'}\n                  padding={0}\n                  width={'250px'}\n                  color={refs.activeLinkColor}\n                  backgroundColor={'transparent'}\n                  border={'none'}\n                  outline={'none'}\n                  placeholder={'Title'}\n                  value={updateGqlViewTitle}\n                  onChange={e => setUpdateGqlViewTitle(e.target.value)}\n                />\n              }\n            </div>\n            <div className={s.cardModal__contentRow}>\n              {`path: `}\n              {\n                <CardModalInput\n                  className={'admin-update-view-path-btn'}\n                  padding={0}\n                  width={'250px'}\n                  color={refs.activeLinkColor}\n                  border={'none'}\n                  outline={'none'}\n                  backgroundColor={'transparent'}\n                  placeholder={'path'}\n                  value={updateGqlViewPath}\n                  onChange={e => setUpdateGqlViewPath(e.target.value)}\n                />\n              }\n            </div>\n\n            <div className={s.cardModal__btnWrap}>\n              <CustomButton\n                className={'admin-update-view-btn'}\n                display={'block'}\n                padding={'3px 30px'}\n                margin={'0 10px 0 0'}\n                borderRadius={'2px'}\n                fontSize={'12px'}\n                type={'submit'}\n                onClick={e => updateView(e)}\n              >\n                Update\n              </CustomButton>\n              <CustomButton\n                className={'admin-update-view-close-btn'}\n                padding={'3px 30px'}\n                borderRadius={'2px'}\n                fontSize={'12px'}\n                type={'submit'}\n                onClick={() => toggleModal(false)}\n              >\n                Cancel\n              </CustomButton>\n            </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ViewItemCard;\n","import { useContext } from 'react';\nimport s from './Admin.module.scss';\nimport Context from '../../Context';\nimport ViewItemCard from './ViewItemCard';\n\nconst ViewList = () => {\n  const { allViews: views, refetch } = useContext(Context);\n\n  return (\n    <div className={s.ViewList__wrap}>\n      <ul className={s.ViewList__list}>\n        {views?.map(view => (\n          <li className={s.ViewList__item} key={view.path}>\n            <ViewItemCard view={view} refetch={refetch} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewList;\n","import { useContext } from 'react';\nimport Context from '../../Context';\nimport { CustomButton } from './uiElements';\nimport sprite from '../../svg/sprite.svg';\n\nconst CreateViewButton = () => {\n  const { toggleAppModal } = useContext(Context);\n\n  return (\n    <CustomButton\n      className={'admin-create-view-btn'}\n      position={'absolute'}\n      top={'-62px'}\n      right={'100px'}\n      padding={'10px'}\n      borderRadius={'50%'}\n      transform={'rotate(45deg)'}\n      type={'button'}\n      onClick={() => toggleAppModal('create-view-btn')}\n    >\n      <svg width=\"9\" height=\"9\" fill=\"white\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </CustomButton>\n  );\n};\n\nexport default CreateViewButton;\n","import s from './Admin.module.scss';\nimport Logout from './Logout';\nimport ViewList from './ViewList';\nimport CreateViewButton from './CreateViewButton';\n\nconst AdminDashboardContent = ({ setCodeboxToken, refetch }) => {\n  return (\n    <div className={s.AdminDashboard__contentWrap}>\n      <>\n        <CreateViewButton refetch={refetch} />\n        <Logout setCodeboxToken={setCodeboxToken} />\n      </>\n\n      <ViewList />\n    </div>\n  );\n};\n\nexport default AdminDashboardContent;\n","import { useEffect, useState, useContext, useMemo } from 'react';\nimport s from './Admin.module.scss';\nimport Context from '../../Context';\nimport Login from './Login';\nimport AdminDashboardContent from './AdminDashboardContent';\n// import Logout from './Logout';\n// import ViewList from './ViewList';\n// import CreateViewButton from './CreateViewButton';\n\nconst AdminDashboard = () => {\n  const [codeboxToken, setCodeboxToken] = useState('');\n\n  const { loading, allViews, refetch } = useContext(Context);\n\n  useMemo(() => allViews && console.log('allViews:', allViews), [allViews]); // *\n\n  useEffect(() => setCodeboxToken(localStorage.getItem('codeboxToken')), []);\n\n  return (\n    <div className={s.AdminDashboard}>\n      {!loading ? (\n        <>\n          {!codeboxToken ? (\n            <Login setCodeboxToken={setCodeboxToken} />\n          ) : (\n            <AdminDashboardContent\n              setCodeboxToken={setCodeboxToken}\n              refetch={refetch}\n            />\n          )}\n        </>\n      ) : (\n        <div className={s.AdminDashboard__loadingWrap}>\n          <span>{`Heroku server: zzz.. ☆(◡.◔)★ ...`}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n","import { withRouter } from 'react-router-dom';\nimport InfoPanel from '../components/Markup/InfoPanel';\nimport { useStyles } from './viewsStyles';\nimport Article from '../components/Markup/Article';\nimport AdminDashboard from '../components/Admin';\n\nconst ComponentView = () => {\n  const viewTitle = 'Admin';\n  const s = useStyles();\n\n  return (\n    <>\n      <InfoPanel />\n      <Article>\n        <h1 className={s.viewTitle}>{viewTitle}</h1>\n        <AdminDashboard />\n      </Article>\n    </>\n  );\n};\n\nexport default withRouter(ComponentView);\n"],"sourceRoot":""}