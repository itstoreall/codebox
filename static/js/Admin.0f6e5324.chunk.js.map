{"version":3,"sources":["components/Markup/Information/Information.module.scss","components/Admin/Admin.module.scss","views/viewsStyles.js","components/Markup/History/HistoryStyles.js","components/Markup/History/Icons.jsx","components/Markup/History/Buttons.jsx","components/Markup/History/History.jsx","components/Markup/Information/InformationBtn.jsx","components/Markup/Information/InformationLists/CurrentList.jsx","components/Markup/Information/InformationLists/GeneralList.jsx","components/Markup/Information/InformationLists/InformationLists.jsx","components/Markup/Information/Information.jsx","components/Markup/InfoPanel/InfoPanel.jsx","components/Markup/Article/Article.jsx","components/Markup/InfoPanel/InfoPanel.module.scss","components/Markup/Article/Article.module.scss","graphql/query/view.js","components/Admin/Display.jsx","components/Admin/Controls.jsx","components/Admin/uiElements.styles.js","components/Admin/uiElements.jsx","graphql/mutation/user.js","components/Admin/Login.jsx","components/Admin/Logout.jsx","components/Admin/GetOneView.jsx","components/Admin/UpdateViewButton.jsx","graphql/mutation/view.js","components/Admin/DeleteViewButton.jsx","components/Admin/ViewItemCard.jsx","components/Admin/ViewList.jsx","components/Admin/GetAllViews.jsx","components/Admin/CreateView.jsx","components/Admin/DeleteView.jsx","components/Admin/UpdateView.jsx","components/Admin/AdminDashboard.jsx","views/AdminView.jsx"],"names":["module","exports","useStyles","createUseStyles","viewTitle","marginBottom","fontSize","color","refs","primeryBlackColor","History","display","alignItems","width","homeButton","cursor","fill","primaryBlackColor50","primaryBlackColor75","homeIcon","fromButton","codebox","arrowIcon","marginLeft","marginRight","height","primaryBlackColor25","currentPathname","whiteSpace","overflow","textOverflow","ArrowIcon","s","className","href","sprite","HomeIcon","path","FromButton","withRouter","props","history","stateFrom","fromPathname","createPathname","type","onClick","push","HomeButton","location","pathname","state","from","substr","includes","split","InformationBtn","showInformation","toggleInformationModal","Information__btn","CurrentList","information","Information__currentlist","Information__item","Information__itemKey","nesting","view","title","feature","GeneralList","localState","useContext","Context","Information__title","Information__generalList","Information__generalItem","Information__generalValueWrap","Information__generalKey","Information__generalValue","quantity","views","features","InformationLists","Information__listWrap","useState","setShowInformation","setInformation","setLocalState","informationData","useDataIterator","useEffect","Information","InfoPanel","infoPanel","Article","children","ALL_VIEWS","gql","GET_ALL_VIEWS","GET_ONE_VIEW","Display","Controls","Input","styled","input","position","top","right","margin","padding","textAlign","primaryWhiteColor","primaryTextColor","filter","Boolean","map","el","join","createInputPading","activeLinkColor","CustomInput","backgroundColor","InitialBtn","button","Button","BG__GreyBlue","CustomButton","flexDirection","justifyContent","borderRadius","PrimaryInput","placeholder","value","onChange","ModalInput","border","outline","PrimaryButton","CardButton","ModalButton","LOGIN","Login","setCodeboxToken","userRole","setUserRole","loginUsername","setLoginUsername","loginPassword","setLoginPassword","loginError","setLoginError","useMutation","variables","username","password","gqlLogin","login","e","a","preventDefault","data","console","log","localStorage","setItem","token","message","toggleInputs","role","Login__form","onSubmit","Login__title","target","Login__error","Login__toggleLink","Logout","GetOneView","gqlViewId","setGqlViewId","gqlView","setGqlView","useQuery","id","oneViewData","oneViewLoading","loading","GetOneView__form","getView","getOneView","UpdateViewButton","toggleModal","CREATE_VIEW","DELETE_VIEW","UPDATE_VIEW","DeleteViewButton","refetch","deleteGqlView","deleteView","ViewItemCard","showModal","setShowModal","updateGqlViewTitle","setUpdateGqlViewTitle","updateGqlViewPath","setUpdateGqlViewPath","updateGqlView","updateView","ViewList__cardModal","cardModal__contentRow","cardModal__btnWrap","ViewList__card","card__contentRow","ViewList","allViews","ViewList__list","ViewList__item","GetAllViews","setAllViews","getAllViews","CreateView","gqlViewTitle","setGqlViewTitle","gqlViewPath","setGqlViewPath","newGqlView","addView","createView","DeleteView","deleteViewId","setDeleteViewId","UpdateView","updateViewId","setUpdateViewId","AdminDashboard","codeboxToken","error","getItem","AdminDashboard__loadingWrap","AdminDashboard__contentWrap"],"mappings":"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","file":"static/js/Admin.0f6e5324.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Information\":\"Information_Information__29eRd\",\"Information__btn\":\"Information_Information__btn__2QVzF\",\"Information__listWrap\":\"Information_Information__listWrap__1ICll\",\"Information__title\":\"Information_Information__title__2ouS9\",\"Information__currentlist\":\"Information_Information__currentlist__9v-hJ\",\"Information__item\":\"Information_Information__item__2TSkr\",\"Information__itemKey\":\"Information_Information__itemKey__Vszyb\",\"Information__generalList\":\"Information_Information__generalList__3lcxG\",\"Information__generalValueWrap\":\"Information_Information__generalValueWrap__1G_MX\",\"Information__generalKey\":\"Information_Information__generalKey__2QNgG\",\"Information__generalValue\":\"Information_Information__generalValue__2p8hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminDashboard\":\"Admin_AdminDashboard__17kOn\",\"AdminDashboard__loadingWrap\":\"Admin_AdminDashboard__loadingWrap__1e3MK\",\"AdminDashboard__contentWrap\":\"Admin_AdminDashboard__contentWrap__1X285\",\"Login\":\"Admin_Login__RzspV\",\"Login__form\":\"Admin_Login__form__3at5p\",\"Login__title\":\"Admin_Login__title__3ooQ7\",\"Login__error\":\"Admin_Login__error__2V6s4\",\"Login__toggleLink\":\"Admin_Login__toggleLink__3DYnw\",\"Display\":\"Admin_Display__drj3C\",\"Controls\":\"Admin_Controls__3KazU\",\"ViewList__list\":\"Admin_ViewList__list__5Ir-h\",\"ViewList__item\":\"Admin_ViewList__item__3nrvH\",\"ViewList__card\":\"Admin_ViewList__card__L-7Dv\",\"ViewList__cardModal\":\"Admin_ViewList__cardModal__3Mp7x\",\"ViewList__cardRow\":\"Admin_ViewList__cardRow__1uLee\",\"card__contentRow\":\"Admin_card__contentRow__i5UNy\",\"cardModal__contentRow\":\"Admin_cardModal__contentRow__23jFl\",\"cardModal__btnWrap\":\"Admin_cardModal__btnWrap__J1GCV\"};","import { createUseStyles } from 'react-jss';\nimport refs from '../styles/refs';\n\nexport const useStyles = createUseStyles(() => {\n  return {\n    viewTitle: {\n      marginBottom: 30,\n      fontSize: 24,\n      color: refs.primeryBlackColor,\n    },\n  };\n});\n","import { createUseStyles } from 'react-jss';\nimport refs from '../../../styles/refs';\n\nexport const useStyles = createUseStyles(() => {\n  return {\n    History: {\n      display: 'flex',\n      alignItems: 'center',\n      width: 'calc(100% - 50px)',\n      // color: refs.primaryBlackColor50,\n      // fontSize: 14,\n    },\n\n    homeButton: {\n      cursor: 'pointer',\n      fill: refs.primaryBlackColor50,\n\n      '&:hover svg': {\n        fill: refs.primaryBlackColor75,\n      },\n    },\n\n    homeIcon: {\n      fill: refs.primaryBlackColor50,\n    },\n\n    fromButton: {\n      fontSize: 14,\n      cursor: 'pointer',\n\n      '& span': {\n        color: refs.primaryBlackColor50,\n      },\n\n      '&:hover span': {\n        color: refs.primaryBlackColor75,\n      },\n    },\n\n    codebox: {\n      fontSize: 14,\n      color: refs.primaryBlackColor50,\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n\n    arrowIcon: {\n      marginLeft: 10,\n      marginRight: 10,\n      width: 14,\n      height: 15,\n      fill: refs.primaryBlackColor25,\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n\n    currentPathname: {\n      color: refs.primaryBlackColor50,\n      fontSize: 14,\n\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n  };\n});\n","import { useStyles } from './HistoryStyles';\nimport sprite from '../../../svg/sprite.svg';\n\nexport const ArrowIcon = () => {\n  const s = useStyles();\n\n  return (\n    <span className={s.arrowIcon}>\n      <svg width=\"14\" height=\"14\">\n        <use href={sprite + '#icon-arrow-right'}></use>\n      </svg>\n    </span>\n  );\n};\n\nexport const HomeIcon = ({ path }) => {\n  const s = useStyles();\n\n  return (\n    <span className={path === '/' ? s.homeIcon : null}>\n      <svg width=\"13\" height=\"13\">\n        <use href={sprite + '#icon-home'}></use>\n      </svg>\n    </span>\n  );\n};\n\n// export default ArrowIcon;\n","import { withRouter } from 'react-router-dom';\nimport { useStyles } from './HistoryStyles';\nimport { HomeIcon } from './Icons';\n\nexport const FromButton = withRouter(({ props, history }) => {\n  const s = useStyles();\n  const { stateFrom, fromPathname, createPathname } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={s.fromButton}\n      onClick={() => history.push(stateFrom)}\n    >\n      {createPathname(fromPathname)}\n    </button>\n  );\n});\n\nexport const HomeButton = withRouter(({ history, location }) => {\n  const s = useStyles();\n\n  return location.pathname !== '/' ? (\n    <button\n      type=\"button\"\n      className={s.homeButton}\n      onClick={() => history.push('/')}\n    >\n      <HomeIcon path={location.pathname} />\n    </button>\n  ) : (\n    <HomeIcon path={location.pathname} />\n  );\n});\n","import { withRouter } from 'react-router-dom';\nimport { useStyles } from './HistoryStyles';\nimport { ArrowIcon } from './Icons';\nimport { HomeButton, FromButton } from './Buttons';\n\nconst History = ({ history, location }) => {\n  // console.log('History location --->', location);\n\n  const s = useStyles();\n  const stateFrom = location.state?.from;\n  const fromPathname = location.state?.from.pathname.substr(1);\n  const currentPathname = location.pathname.substr(1);\n\n  const createPathname = pathname => {\n    return (\n      pathname && (\n        <span\n          className={\n            pathname === currentPathname\n              ? s.currentPathname\n              : pathname === fromPathname && null\n          }\n        >\n          {pathname?.includes('/') ? pathname?.split('/')[1] : pathname}\n        </span>\n      )\n    );\n  };\n\n  return (\n    <div className={s.History}>\n      <HomeButton />\n      <ArrowIcon />\n      {location.pathname !== '/' ? (\n        <FromButton props={{ stateFrom, fromPathname, createPathname }} />\n      ) : (\n        <span className={s.codebox}>{'codebox'}</span>\n      )}\n      {fromPathname && <ArrowIcon />}\n      {createPathname(currentPathname)}\n    </div>\n  );\n};\n\nexport default withRouter(History);\n","import s from './Information.module.scss';\nimport sprite from '../../../svg/sprite.svg';\n\nconst InformationBtn = ({ showInformation, toggleInformationModal }) => {\n  return showInformation ? (\n    <button className={s.Information__btn} onClick={toggleInformationModal}>\n      <svg width=\"14\" height=\"14\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </button>\n  ) : (\n    <button className={s.Information__btn} onClick={toggleInformationModal}>\n      <svg width=\"18\" height=\"18\">\n        <use href={sprite + '#icon-info'}></use>\n      </svg>\n    </button>\n  );\n};\n\nexport default InformationBtn;\n","import s from '../Information.module.scss';\n\nconst CurrentList = ({ information }) => {\n  return (\n    <ul className={s.Information__currentlist}>\n      <li className={s.Information__item}>\n        <span className={s.Information__itemKey}>{`View: `}</span>\n        {information.nesting !== 0 ? information?.view?.title : 'Home'}\n      </li>\n      {information.nesting === 2 && (\n        <li className={s.Information__item}>\n          <span className={s.Information__itemKey}>{`Feature: `}</span>\n          {information.feature.title}\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default CurrentList;\n","import { useContext } from 'react';\nimport s from '../Information.module.scss';\nimport Context from '../../../../Context';\n\nconst GeneralList = () => {\n  const { localState } = useContext(Context);\n\n  return (\n    <>\n      <span className={s.Information__title}>General:</span>\n\n      <ul className={s.Information__generalList}>\n        <li className={s.Information__generalItem}>\n          <div className={s.Information__generalValueWrap}>\n            <span className={s.Information__generalKey}>\n              Views:{' '}\n              <span className={s.Information__generalValue}>\n                {localState.quantity.views}\n              </span>\n            </span>\n            <span className={s.Information__generalKey}>\n              Features:{' '}\n              <span className={s.Information__generalValue}>\n                {localState.quantity.features - 1}\n              </span>\n            </span>\n          </div>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default GeneralList;\n","import s from '../Information.module.scss';\nimport CurrentList from './CurrentList';\nimport GeneralList from './GeneralList';\n\nconst InformationLists = ({ information }) => {\n  return (\n    <div className={s.Information__listWrap}>\n      <CurrentList information={information} />\n      <GeneralList />\n    </div>\n  );\n};\n\nexport default InformationLists;\n","import { useState, useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Context from '../../../Context';\nimport s from './Information.module.scss';\nimport InformationBtn from './InformationBtn';\nimport InformationLists from './InformationLists';\nimport useDataIterator from '../../../hooks/useDataIterator';\n\nconst Information = ({ location }) => {\n  const [showInformation, setShowInformation] = useState(false);\n  const [information, setInformation] = useState(null);\n  const { localState, setLocalState, views } = useContext(Context);\n  const informationData = useDataIterator(location, views);\n\n  useEffect(() => setInformation(informationData), [location.pathname]);\n\n  useEffect(\n    () => setLocalState({ ...localState, ...information }),\n    [information],\n  );\n\n  const toggleInformationModal = () => setShowInformation(!showInformation);\n\n  return (\n    <div className={s.Information}>\n      <InformationBtn\n        showInformation={showInformation}\n        toggleInformationModal={toggleInformationModal}\n      ></InformationBtn>\n\n      {showInformation && <InformationLists information={information} />}\n    </div>\n  );\n};\n\nexport default withRouter(Information);\n","import s from './InfoPanel.module.scss';\nimport History from '../History';\nimport Information from '../../Markup/Information';\n\nconst InfoPanel = () => {\n  return (\n    <div className={s.infoPanel}>\n      <History />\n      <Information />\n    </div>\n  );\n};\n\nexport default InfoPanel;\n","import s from './Article.module.scss';\n\nconst Article = ({ children }) => (\n  <article className={s.Article}>{children}</article>\n);\n\nexport default Article;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoPanel\":\"InfoPanel_infoPanel__2Wnih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Article\":\"Article_Article__3XQP8\"};","import { gql } from '@apollo/client';\n\nexport const ALL_VIEWS = gql`\n  fragment AllViews on View {\n    title\n    path\n  }\n`;\n\nexport const GET_ALL_VIEWS = gql`\n  ${ALL_VIEWS}\n  query {\n    getAllViews {\n      id\n      ...AllViews\n    }\n  }\n`;\n\nexport const GET_ONE_VIEW = gql`\n  ${ALL_VIEWS}\n  query getView($id: ID) {\n    getView(id: $id) {\n      id\n      ...AllViews\n    }\n  }\n`;\n","import s from './Admin.module.scss';\n\nconst Display = ({ children }) => <div className={s.Display}>{children}</div>;\n\nexport default Display;\n","import s from './Admin.module.scss';\n\nconst Controls = ({ children }) => <div className={s.Controls}>{children}</div>;\n\nexport default Controls;\n","import styled from 'styled-components';\nimport refs from '../../styles/refs';\n\nconst createInputPading = padding =>\n  padding\n    .split('px')\n    .filter(Boolean)\n    .map(el => `${+el - 1}px`)\n    .join(' ');\n\n// Inputs\nexport const Input = styled.input`\n  position: ${({ position }) => position};\n  top: ${({ top }) => top};\n  right: ${({ right }) => right};\n  margin: ${({ margin }) => margin};\n  padding: ${({ padding }) => padding};\n  width: ${({ width }) => width};\n  text-align: ${({ textAlign }) => textAlign};\n  color: ${({ color }) => color};\n  background-color: ${refs.primaryWhiteColor};\n  border: 1px solid ${refs.primaryTextColor};\n  border-radius: 4px;\n\n  :focus {\n    padding: ${({ padding }) => createInputPading(padding)};\n    border: 2px solid ${refs.activeLinkColor};\n    outline: none;\n  }\n\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    color: ${refs.primaryBlackColor25};\n  }\n  :-ms-input-placeholder {\n    color: ${refs.primaryBlackColor25};\n  }\n\n  :focus::-webkit-input-placeholder {\n    color: transparent;\n  }\n\n  :focus::-moz-placeholder {\n    color: transparent;\n  }\n\n  :focus:-moz-placeholder {\n    color: transparent;\n  }\n\n  :focus:-ms-input-placeholder {\n    color: transparent;\n  }\n`;\n\nexport const CustomInput = styled.input`\n  position: ${({ position }) => position};\n  top: ${({ top }) => top};\n  right: ${({ right }) => right};\n  margin: ${({ margin }) => margin};\n  padding: ${({ padding }) => padding};\n  width: ${({ width }) => width};\n  height: ${({ height }) => height};\n  text-align: ${({ textAlign }) => textAlign};\n  color: ${({ color }) => color};\n  white-space: ${({ whiteSpace }) => whiteSpace};\n  overflow: ${({ overflow }) => overflow};\n  text-overflow: ${({ textOverflow }) => textOverflow};\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  border: ${({ color }) => color};\n  outline: ${({ color }) => color};\n`;\n\n// Buttons\nconst InitialBtn = styled.button`\n  background-color: ${refs.primaryTextColor};\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`;\n\nexport const Button = styled(InitialBtn)`\n  position: ${({ position }) => position};\n  top: ${({ top }) => top};\n  right: ${({ right }) => right};\n  display: ${({ display }) => display};\n  padding: ${({ padding }) => padding};\n  margin: ${({ margin }) => margin};\n  width: ${({ width }) => width};\n  color: ${({ color }) => color};\n  white-space: ${({ whiteSpace }) => whiteSpace};\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  border-radius: 4px;\n\n  &:hover {\n    background-color: ${refs.BG__GreyBlue};\n  }\n`;\n\nexport const CustomButton = styled(InitialBtn)`\n  position: ${({ position }) => position};\n  top: ${({ top }) => top};\n  right: ${({ right }) => right};\n  display: ${({ display }) => display};\n  flex-direction: ${({ flexDirection }) => flexDirection};\n  justify-content: ${({ justifyContent }) => justifyContent};\n  align-items: ${({ alignItems }) => alignItems};\n  display: ${({ display }) => display};\n  padding: ${({ padding }) => padding};\n  margin: ${({ margin }) => margin};\n  width: ${({ width }) => width};\n  height: ${({ height }) => height};\n  font-size: ${({ fontSize }) => fontSize};\n  color: ${({ color }) => color};\n  white-space: ${({ whiteSpace }) => whiteSpace};\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  border-radius: ${({ borderRadius }) => borderRadius};\n\n  &:hover {\n    background-color: ${refs.BG__GreyBlue};\n  }\n`;\n\n/*\npath {\n  stroke: ${({ stroke, theme }) => stroke ?? theme.primary1};\n}\n*/\n","import { Button, Input, CustomInput, CustomButton } from './uiElements.styles';\nimport refs from '../../styles/refs';\n\nexport const PrimaryInput = ({\n  className = 'admin-primary-input',\n  position,\n  top = 0,\n  right = 0,\n  margin,\n  padding = '9px 9px',\n  width,\n  textAlign,\n  color = refs.primaryBlackColor75,\n  type = 'text',\n  placeholder,\n  value,\n  onChange,\n  children,\n}) => (\n  <Input\n    className={className}\n    position={position}\n    top={top}\n    right={right}\n    margin={margin}\n    padding={padding}\n    width={width}\n    textAlign={textAlign}\n    color={color}\n    type={type}\n    placeholder={placeholder}\n    value={value}\n    onChange={onChange}\n  >\n    {children}\n  </Input>\n);\n\nexport const ModalInput = ({\n  className = 'admin-modal-input',\n  position,\n  top = 0,\n  right = 0,\n  margin,\n  padding,\n  width,\n  height,\n  textAlign,\n  color,\n  whiteSpace,\n  overflow,\n  textOverflow,\n  backgroundColor,\n  border,\n  outline,\n  type = 'text',\n  placeholder,\n  value,\n  onChange,\n  children,\n}) => (\n  <CustomInput\n    className={className}\n    position={position}\n    top={top}\n    right={right}\n    margin={margin}\n    padding={padding}\n    width={width}\n    height={height}\n    textAlign={textAlign}\n    color={color}\n    whiteSpace={whiteSpace}\n    overflow={overflow}\n    textOverflow={textOverflow}\n    backgroundColor={backgroundColor}\n    border={border}\n    outline={outline}\n    type={type}\n    placeholder={placeholder}\n    value={value}\n    onChange={onChange}\n  >\n    {children}\n  </CustomInput>\n);\n\nexport const PrimaryButton = ({\n  className = 'admin-primary-btn',\n  position,\n  top = 0,\n  right = 0,\n  display,\n  padding = '10px 20px',\n  margin,\n  width,\n  color = 'white',\n  whiteSpace = 'nowrap',\n  type = 'button',\n  onClick,\n  children,\n}) => (\n  <Button\n    className={className}\n    position={position}\n    top={top}\n    right={right}\n    display={display}\n    padding={padding}\n    margin={margin}\n    width={width}\n    color={color}\n    whiteSpace={whiteSpace}\n    type={type}\n    onClick={onClick}\n  >\n    {children}\n  </Button>\n);\n\nexport const CardButton = ({\n  className = 'admin-round-btn',\n  position,\n  top = 0,\n  right = 0,\n  display = 'flex',\n  flexDirection,\n  justifyContent = 'center',\n  alignItems = 'center',\n  padding,\n  margin,\n  width = '20px',\n  height = '20px',\n  color = 'white',\n  whiteSpace = 'nowrap',\n  borderRadius = '50%',\n  type = 'button',\n  onClick,\n  children,\n}) => (\n  <CustomButton\n    className={className}\n    position={position}\n    top={top}\n    right={right}\n    display={display}\n    flexDirection={flexDirection}\n    justifyContent={justifyContent}\n    alignItems={alignItems}\n    padding={padding}\n    margin={margin}\n    width={width}\n    height={height}\n    color={color}\n    whiteSpace={whiteSpace}\n    borderRadius={borderRadius}\n    type={type}\n    onClick={onClick}\n  >\n    {children}\n  </CustomButton>\n);\n\nexport const ModalButton = ({\n  className = 'admin-round-btn',\n  position,\n  top = 0,\n  right = 0,\n  display,\n  flexDirection,\n  justifyContent = 'center',\n  alignItems = 'center',\n  padding = 0,\n  margin,\n  width,\n  height,\n  fontSize,\n  color = 'white',\n  whiteSpace = 'nowrap',\n  borderRadius,\n  type = 'button',\n  onClick,\n  children,\n}) => (\n  <CustomButton\n    className={className}\n    position={position}\n    top={top}\n    right={right}\n    display={display}\n    flexDirection={flexDirection}\n    justifyContent={justifyContent}\n    alignItems={alignItems}\n    padding={padding}\n    margin={margin}\n    width={width}\n    height={height}\n    fontSize={fontSize}\n    color={color}\n    whiteSpace={whiteSpace}\n    borderRadius={borderRadius}\n    type={type}\n    onClick={onClick}\n  >\n    {children}\n  </CustomButton>\n);\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      username\n      email\n      token\n      role\n      createdAt\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { PrimaryButton, PrimaryInput } from './uiElements';\nimport { LOGIN } from '../../graphql/mutation/user';\nimport s from './Admin.module.scss';\n\nconst Login = ({ setCodeboxToken }) => {\n  const [userRole, setUserRole] = useState('guest');\n  const [loginUsername, setLoginUsername] = useState('Guest');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const [gqlLogin] = useMutation(LOGIN, {\n    variables: {\n      username: loginUsername,\n      password: loginPassword,\n    },\n  });\n\n  const login = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await gqlLogin({\n        variables: {\n          username: loginUsername,\n          password: loginPassword,\n        },\n      });\n\n      console.log('login token:', data.login);\n\n      if (data) {\n        localStorage.setItem('codeboxToken', data.login.token);\n        setCodeboxToken(data.login.token);\n      }\n\n      setLoginUsername('');\n      setLoginPassword('');\n      setLoginError('');\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > login:', err.message);\n      setLoginError(err.message);\n    }\n  };\n\n  const toggleInputs = role => {\n    console.log('role:', role);\n    setUserRole(role);\n    setLoginUsername(role === 'admin' ? 'Admin' : role === 'guest' && 'Guest');\n  };\n\n  return (\n    <div className={s.Login}>\n      <form className={s.Login__form} onSubmit={e => login(e)}>\n        <h2 className={s.Login__title}>\n          {userRole === 'guest' ? 'Guest' : userRole === 'admin' && 'Admin'}\n        </h2>\n\n        {userRole === 'guest' ? (\n          <PrimaryInput\n            className={'admin-login-password-input'}\n            padding={'15px'}\n            margin={'0 0 30px'}\n            width={'100%'}\n            textAlign={'center'}\n            placeholder={'password'}\n            value={loginPassword}\n            onChange={e => {\n              setLoginPassword(e.target.value);\n              setLoginError('');\n            }}\n          />\n        ) : (\n          userRole === 'admin' && (\n            <PrimaryInput\n              className={'admin-login-password-input'}\n              padding={'15px'}\n              margin={'0 0 30px'}\n              width={'100%'}\n              textAlign={'center'}\n              placeholder={'password'}\n              value={loginPassword}\n              onChange={e => setLoginPassword(e.target.value)}\n            />\n          )\n        )}\n\n        <span className={s.Login__error}>{loginError}</span>\n\n        <PrimaryButton\n          className={'admin-login-btn'}\n          display={'block'}\n          padding={'15px'}\n          margin={'0 0 30px'}\n          width={'100%'}\n          type={'submit'}\n        >\n          Login\n        </PrimaryButton>\n\n        {userRole === 'guest' ? (\n          <sapn\n            className={s.Login__toggleLink}\n            onClick={() => toggleInputs('admin')}\n          >\n            Administrator\n          </sapn>\n        ) : (\n          userRole === 'admin' && (\n            <sapn\n              className={s.Login__toggleLink}\n              onClick={() => toggleInputs('guest')}\n            >\n              Guest\n            </sapn>\n          )\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { PrimaryButton } from './uiElements';\n\nconst Logout = ({ setCodeboxToken }) => {\n  const removeToken = () => {\n    localStorage.setItem('codeboxToken', '');\n    setCodeboxToken('');\n  };\n\n  return (\n    <PrimaryButton\n      className={'admin-logout-btn'}\n      position={'absolute'}\n      top={'-62px'}\n      right={0}\n      onClick={removeToken}\n    >\n      Logout\n    </PrimaryButton>\n  );\n};\n\nexport default Logout;\n","import { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport s from './Admin.module.scss'\nimport { PrimaryButton, PrimaryInput } from './uiElements';\nimport { GET_ONE_VIEW } from '../../graphql/query/view';\n\nconst GetOneView = () => {\n  const [gqlViewId, setGqlViewId] = useState('');\n  const [gqlView, setGqlView] = useState('');\n\n  const { data: oneViewData, loading: oneViewLoading } = useQuery(\n    GET_ONE_VIEW,\n    {\n      variables: {\n        id: gqlViewId,\n      },\n    },\n  );\n\n  const getOneView = e => {\n    e.preventDefault();\n\n    !oneViewLoading && setGqlView(oneViewData?.getView.title);\n\n    setGqlViewId('');\n  };\n\n  gqlView && console.log('gqlView:', gqlView);\n\n  return (\n    <div>\n      <h2>One view form</h2>\n\n      {gqlView && <span>Get view: {gqlView}</span>}\n\n      <form className={s.GetOneView__form} onSubmit={e => getOneView(e)}>\n        <PrimaryInput\n          className={'admin-get-one-view-id-input'}\n          placeholder={'id'}\n          value={gqlViewId}\n          onChange={e => setGqlViewId(e.target.value)}\n        />\n        <PrimaryButton className={'admin-get-one-view-btn'} type={'submit'}>\n          Get one\n        </PrimaryButton>\n      </form>\n    </div>\n  );\n};\n\nexport default GetOneView;\n","import { CardButton } from './uiElements';\nimport sprite from '../../svg/sprite.svg';\n\nconst UpdateViewButton = ({ toggleModal }) => (\n  <CardButton\n    className={'admin-delete-view-button-btn'}\n    margin={'0 0 10px 0'}\n    borderRadius={'4px'}\n    onClick={() => toggleModal(true)}\n  >\n    <svg width=\"9\" height=\"9\" fill=\"white\">\n      <use href={sprite + '#icon-edit'}></use>\n    </svg>\n  </CardButton>\n);\n\nexport default UpdateViewButton;\n","import { gql } from '@apollo/client';\n\nexport const CREATE_VIEW = gql`\n  mutation createView($input: CreateViewInput) {\n    createView(input: $input) {\n      id\n      title\n      path\n    }\n  }\n`;\n\nexport const DELETE_VIEW = gql`\n  mutation deleteView($id: ID) {\n    deleteView(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const UPDATE_VIEW = gql`\n  mutation updateView($id: ID, $input: UpdateViewInput) {\n    updateView(id: $id, input: $input) {\n      id\n      title\n      path\n    }\n  }\n`;\n","import { useMutation } from '@apollo/client';\nimport { CardButton } from './uiElements';\nimport { DELETE_VIEW } from '../../graphql/mutation/view';\nimport sprite from '../../svg/sprite.svg';\n\nconst DeleteViewButton = ({ id, refetch }) => {\n  const [deleteGqlView] = useMutation(DELETE_VIEW, {\n    variables: { id: id },\n  });\n\n  const deleteView = async e => {\n    e.preventDefault();\n\n    console.log('id:', id);\n\n    try {\n      const { data } = await deleteGqlView();\n\n      console.log('deleted id !!!', data.deleteView);\n\n      refetch();\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > deleteView:', err.message);\n    }\n  };\n\n  return (\n    <CardButton\n      className={'admin-delete-view-button-btn'}\n      borderRadius={'4px'}\n      onClick={e => deleteView(e)}\n    >\n      <svg width=\"9\" height=\"9\" fill=\"white\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </CardButton>\n  );\n};\n\nexport default DeleteViewButton;\n","import { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport s from './Admin.module.scss';\nimport { ModalInput, ModalButton } from './uiElements';\nimport UpdateViewButton from './UpdateViewButton';\nimport DeleteViewButton from './DeleteViewButton';\nimport { UPDATE_VIEW } from '../../graphql/mutation/view';\nimport refs from '../../styles/refs';\n\nconst ViewItemCard = ({ view, refetch }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [updateGqlViewTitle, setUpdateGqlViewTitle] = useState('');\n  const [updateGqlViewPath, setUpdateGqlViewPath] = useState('');\n\n  useEffect(() => {\n    setUpdateGqlViewTitle(view.title);\n    setUpdateGqlViewPath(view.path);\n  }, []);\n\n  console.log('showModal -->', showModal);\n\n  const [updateGqlView] = useMutation(UPDATE_VIEW, {\n    variables: {\n      id: view.id,\n      input: { title: updateGqlViewTitle, path: updateGqlViewPath },\n    },\n  });\n\n  const updateView = async e => {\n    e.preventDefault();\n    console.log('id:', view.id);\n\n    try {\n      const { data } = await updateGqlView();\n\n      console.log('updateView !!!', data.updateView);\n\n      refetch();\n      toggleModal(false);\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > updateView:', err.message);\n    }\n  };\n\n  const toggleModal = value => {\n    console.log('value', value);\n    setShowModal(value);\n  };\n\n  return (\n    <>\n      {!showModal ? (\n        <>\n          <div className={s.ViewList__card}>\n            <div className={s.card__contentRow}>id: {view?.id}</div>\n            <div className={s.card__contentRow}>title: {view?.title}</div>\n            <div className={s.card__contentRow}>path: {view?.path}</div>\n          </div>\n\n          <div>\n            <UpdateViewButton toggleModal={toggleModal} />\n            <DeleteViewButton id={view?.id} refetch={refetch} />\n          </div>\n        </>\n      ) : (\n        <div className={s.ViewList__cardModal}>\n          <form className={s.GetOneView__form} onSubmit={e => updateView(e)}>\n            <div className={s.cardModal__contentRow}>id: {view.id}</div>\n            <div className={s.cardModal__contentRow}>\n              {`title: `}\n              {\n                <ModalInput\n                  className={'admin-update-view-title-btn'}\n                  padding={0}\n                  width={'250px'}\n                  color={refs.activeLinkColor}\n                  backgroundColor={'transparent'}\n                  outline={'none'}\n                  placeholder={'Title'}\n                  value={updateGqlViewTitle}\n                  onChange={e => setUpdateGqlViewTitle(e.target.value)}\n                />\n              }\n            </div>\n            <div className={s.cardModal__contentRow}>\n              {`path: `}\n              {\n                <ModalInput\n                  className={'admin-update-view-path-btn'}\n                  padding={0}\n                  width={'250px'}\n                  color={refs.activeLinkColor}\n                  border={'none'}\n                  backgroundColor={'transparent'}\n                  placeholder={'path'}\n                  value={updateGqlViewPath}\n                  onChange={e => setUpdateGqlViewPath(e.target.value)}\n                />\n              }\n            </div>\n\n            <div className={s.cardModal__btnWrap}>\n              <ModalButton\n                className={'admin-update-view-btn'}\n                display={'block'}\n                padding={'3px 30px'}\n                margin={'0 10px 0 0'}\n                borderRadius={'2px'}\n                fontSize={'12px'}\n                type={'submit'}\n                onClick={e => updateView(e)}\n              >\n                Update\n              </ModalButton>\n              <ModalButton\n                className={'admin-update-view-close-btn'}\n                padding={'3px 30px'}\n                borderRadius={'2px'}\n                fontSize={'12px'}\n                type={'submit'}\n                onClick={() => toggleModal(false)}\n              >\n                Cancel\n              </ModalButton>\n            </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ViewItemCard;\n","import s from './Admin.module.scss';\nimport ViewItemCard from './ViewItemCard';\n\nconst ViewList = ({ allViews, refetch }) => {\n  return (\n    <ul className={s.ViewList__list}>\n      {allViews?.map(view => (\n        <li className={s.ViewList__item} key={view.path}>\n          <ViewItemCard view={view} refetch={refetch} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ViewList;\n","import { useState, useEffect } from 'react';\nimport ViewList from './ViewList';\n// import { PrimaryButton } from './uiElements';\n\nconst GetAllViews = ({ views, loading, refetch }) => {\n  const [allViews, setAllViews] = useState();\n\n  useEffect(() => !loading && setAllViews(views.getAllViews), [views]);\n\n  loading && console.log('loading......');\n  allViews && console.log('allViews', allViews);\n\n  // const getAll = e => {\n  //   e.preventDefault();\n  //   refetch();\n  // }; // *\n\n  return (\n    <>\n      <ViewList allViews={allViews} refetch={refetch} />\n\n      {/* <PrimaryButton\n        className={'admin-get-all-views-btn'}\n        type=\"button\"\n        onClick={e => getAll(e)}\n      >\n        Get all\n      </PrimaryButton> */}\n    </>\n  );\n};\n\nexport default GetAllViews;\n","import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport s from './Admin.module.scss';\nimport { PrimaryButton, PrimaryInput } from './uiElements';\nimport { CREATE_VIEW } from '../../graphql/mutation/view';\n\nconst CreateView = ({ refetch }) => {\n  const [gqlViewTitle, setGqlViewTitle] = useState('');\n  const [gqlViewPath, setGqlViewPath] = useState('');\n\n  const [newGqlView] = useMutation(CREATE_VIEW);\n\n  const addView = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await newGqlView({\n        variables: {\n          input: {\n            title: gqlViewTitle,\n            path: gqlViewPath,\n          },\n        },\n      });\n\n      console.log('new view !!!', data.createView);\n\n      refetch();\n      setGqlViewTitle('');\n      setGqlViewPath('');\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > addView:', err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Create form</h2>\n      <form className={s.GetOneView__form} onSubmit={e => addView(e)}>\n        <PrimaryInput\n          className={'admin-create-view-title-input'}\n          placeholder={'Title'}\n          value={gqlViewTitle}\n          onChange={e => setGqlViewTitle(e.target.value)}\n        />\n        <PrimaryInput\n          className={'admin-create-view-path-input'}\n          placeholder={'path'}\n          value={gqlViewPath}\n          onChange={e => setGqlViewPath(e.target.value)}\n        />\n        <PrimaryButton className={'admin-create-view-btn'} type={'sybmit'}>\n          Create\n        </PrimaryButton>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateView;\n","import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport s from './Admin.module.scss';\nimport { PrimaryButton, PrimaryInput } from './uiElements';\nimport { DELETE_VIEW } from '../../graphql/mutation/view';\n\nconst DeleteView = ({ refetch }) => {\n  const [deleteViewId, setDeleteViewId] = useState('');\n\n  const [deleteGqlView] = useMutation(DELETE_VIEW, {\n    variables: { id: deleteViewId },\n  });\n\n  const deleteView = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await deleteGqlView();\n\n      console.log('deletedViewId !!!', data.deleteView);\n\n      refetch();\n      setDeleteViewId('');\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > deleteView:', err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Delete form</h2>\n      <form className={s.GetOneView__form} onSubmit={e => deleteView(e)}>\n        <PrimaryInput\n          className={'admin-delete-view-id-input'}\n          placeholder={'id'}\n          value={deleteViewId}\n          onChange={e => setDeleteViewId(e.target.value)}\n        />\n        <PrimaryButton className={'admin-delete-view-btn'} type={'submit'}>\n          Delete\n        </PrimaryButton>\n      </form>\n    </div>\n  );\n};\n\nexport default DeleteView;\n","import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport s from './Admin.module.scss';\nimport { PrimaryButton, PrimaryInput } from './uiElements';\nimport { UPDATE_VIEW } from '../../graphql/mutation/view';\n\nconst UpdateView = ({ refetch }) => {\n  const [updateViewId, setUpdateViewId] = useState('');\n  const [updateGqlViewTitle, setUpdateGqlViewTitle] = useState('');\n  const [updateGqlViewPath, setUpdateGqlViewPath] = useState('');\n\n  const [updateGqlView] = useMutation(UPDATE_VIEW, {\n    variables: {\n      id: updateViewId,\n      input: { title: updateGqlViewTitle, path: updateGqlViewPath },\n    },\n  });\n\n  const updateView = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await updateGqlView();\n\n      console.log('updateView !!!', data.updateView);\n\n      refetch();\n      setUpdateViewId('');\n      setUpdateGqlViewTitle('');\n      setUpdateGqlViewPath('');\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > updateView:', err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Update form</h2>\n      <form className={s.GetOneView__form} onSubmit={e => updateView(e)}>\n        <PrimaryInput\n          className={'admin-update-view-id-btn'}\n          placeholder={'id'}\n          value={updateViewId}\n          onChange={e => setUpdateViewId(e.target.value)}\n        />\n        <PrimaryInput\n          className={'admin-update-view-title-btn'}\n          placeholder={'Title'}\n          value={updateGqlViewTitle}\n          onChange={e => setUpdateGqlViewTitle(e.target.value)}\n        />\n        <PrimaryInput\n          className={'admin-update-view-path-btn'}\n          placeholder={'path'}\n          value={updateGqlViewPath}\n          onChange={e => setUpdateGqlViewPath(e.target.value)}\n        />\n        <PrimaryButton className={'admin-update-view-btn'} type={'submit'}>\n          Update\n        </PrimaryButton>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateView;\n","import { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport s from './Admin.module.scss';\nimport { GET_ALL_VIEWS } from '../../graphql/query/view';\nimport Display from './Display';\nimport Controls from './Controls';\nimport Login from './Login';\nimport Logout from './Logout';\nimport GetOneView from './GetOneView';\nimport GetAllViews from './GetAllViews';\nimport CreateView from './CreateView';\nimport DeleteView from './DeleteView';\nimport UpdateView from './UpdateView';\n\nconst AdminDashboard = () => {\n  const [codeboxToken, setCodeboxToken] = useState('');\n\n  const { data, loading, error, refetch } = useQuery(GET_ALL_VIEWS);\n\n  useEffect(() => setCodeboxToken(localStorage.getItem('codeboxToken')), []);\n\n  return (\n    <div className={s.AdminDashboard}>\n      {!loading ? (\n        <>\n          {!codeboxToken ? (\n            <Login setCodeboxToken={setCodeboxToken} />\n          ) : (\n            <div className={s.AdminDashboard__contentWrap}>\n              <Logout setCodeboxToken={setCodeboxToken} />\n\n              <Display>\n                <GetAllViews views={data} loading={loading} refetch={refetch} />\n              </Display>\n\n              <Controls>\n                <GetOneView />\n                <CreateView refetch={refetch} />\n                <DeleteView refetch={refetch} />\n                <UpdateView refetch={refetch} />\n              </Controls>\n            </div>\n          )}\n        </>\n      ) : (\n        <div className={s.AdminDashboard__loadingWrap}>\n          <span>{`Heroku server: zzz.. ☆(◡.◔)★ ...`}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n","import { withRouter } from 'react-router-dom';\nimport InfoPanel from '../components/Markup/InfoPanel';\nimport { useStyles } from './viewsStyles';\nimport Article from '../components/Markup/Article';\nimport AdminDashboard from '../components/Admin';\n\nconst ComponentView = () => {\n  const viewTitle = 'Admin';\n  const s = useStyles();\n\n  return (\n    <>\n      <InfoPanel />\n      <Article>\n        <h1 className={s.viewTitle}>{viewTitle}</h1>\n        <AdminDashboard />\n      </Article>\n    </>\n  );\n};\n\nexport default withRouter(ComponentView);\n"],"sourceRoot":""}