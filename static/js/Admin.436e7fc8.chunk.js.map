{"version":3,"sources":["components/Markup/Information/Information.module.scss","views/viewsStyles.js","components/Markup/History/HistoryStyles.js","components/Markup/History/Icons.jsx","components/Markup/History/Buttons.jsx","components/Markup/History/History.jsx","components/Markup/Information/InformationBtn.jsx","components/Markup/Information/InformationLists/CurrentList.jsx","components/Markup/Information/InformationLists/GeneralList.jsx","components/Markup/Information/InformationLists/InformationLists.jsx","components/Markup/Information/Information.jsx","components/Markup/InfoPanel/InfoPanel.jsx","components/Markup/Article/Article.jsx","components/Markup/InfoPanel/InfoPanel.module.scss","components/Markup/Article/Article.module.scss","graphql/mutation/user.js","components/Admin/Login.jsx","components/Admin/Logout.jsx","components/Admin/UpdateViewButton.jsx","components/Admin/DeleteViewButton.jsx","components/Admin/UpdateViewCardModal.jsx","components/Admin/UpdateView.jsx","components/Admin/ViewItemCard.jsx","components/Admin/ViewList.jsx","components/Admin/Search.jsx","components/Admin/CreateViewButton.jsx","components/Admin/AdminDashboardContent.jsx","components/Admin/AdminDashboard.jsx","views/AdminView.jsx"],"names":["module","exports","useStyles","createUseStyles","viewTitle","marginBottom","fontSize","color","refs","primeryBlackColor","History","display","alignItems","width","homeButton","cursor","fill","primaryBlackColor50","primaryBlackColor75","homeIcon","fromButton","codebox","arrowIcon","marginLeft","marginRight","height","primaryBlackColor25","currentPathname","whiteSpace","overflow","textOverflow","ArrowIcon","s","className","href","sprite","HomeIcon","path","FromButton","withRouter","props","history","stateFrom","fromPathname","createPathname","type","onClick","push","HomeButton","location","pathname","state","from","substr","includes","split","InformationBtn","showInformation","toggleInformationModal","Information__btn","CurrentList","information","Information__currentlist","Information__item","Information__itemKey","nesting","view","title","feature","GeneralList","localState","useContext","Context","Information__title","Information__generalList","Information__generalItem","Information__generalValueWrap","Information__generalKey","Information__generalValue","quantity","views","features","InformationLists","Information__listWrap","useState","setShowInformation","setInformation","setLocalState","informationData","useDataIterator","useEffect","Information","InfoPanel","infoPanel","Article","children","LOGIN","gql","Login","setCodeboxToken","userRole","setUserRole","loginUsername","setLoginUsername","loginPassword","setLoginPassword","loginError","setLoginError","hidePassword","setHidePassword","useMutation","variables","username","password","gqlLogin","login","e","a","preventDefault","data","console","log","localStorage","setItem","token","message","toggleInputs","role","Login__form","onSubmit","Login__title","padding","margin","border","primaryTextColor","borderRadius","placeholder","value","onChange","target","Login__passwordEye","Login__error","Login__toggleLink","Logout","UpdateViewButton","toggleModal","DeleteViewButton","id","toggleAppModal","deleteView","content","UpdateViewCardModal","updateGqlViewTitle","updateGqlViewPath","setUpdateGqlViewTitle","setUpdateGqlViewPath","updateView","toggleCardModal","cardModal__contentRow","activeLinkColor","backgroundColor","outline","cardModal__btnWrap","UpdateView","refetch","UPDATE_VIEW","input","updateGqlView","ViewItemCard","showModal","setShowModal","ViewList__cardModal","ViewList__card","card__contentRow","ViewList__btnWrap","ViewList","searchResult","setData","allViews","ViewList__wrap","ViewList__list","map","ViewList__item","Search","setSearchResult","searchValue","setSearchValue","resultHandler","filter","Search__wrap","searchValueHandler","Search__iconWrap","CreateViewButton","transform","AdminDashboardContent","AdminDashboard__contentWrap","content__btnWrap","AdminDashboard","codeboxToken","loading","useMemo","getItem","AdminDashboard__loadingWrap"],"mappings":"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","file":"static/js/Admin.436e7fc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Information\":\"Information_Information__29eRd\",\"Information__btn\":\"Information_Information__btn__2QVzF\",\"Information__listWrap\":\"Information_Information__listWrap__1ICll\",\"Information__title\":\"Information_Information__title__2ouS9\",\"Information__currentlist\":\"Information_Information__currentlist__9v-hJ\",\"Information__item\":\"Information_Information__item__2TSkr\",\"Information__itemKey\":\"Information_Information__itemKey__Vszyb\",\"Information__generalList\":\"Information_Information__generalList__3lcxG\",\"Information__generalValueWrap\":\"Information_Information__generalValueWrap__1G_MX\",\"Information__generalKey\":\"Information_Information__generalKey__2QNgG\",\"Information__generalValue\":\"Information_Information__generalValue__2p8hD\"};","import { createUseStyles } from 'react-jss';\nimport refs from '../styles/refs';\n\nexport const useStyles = createUseStyles(() => {\n  return {\n    viewTitle: {\n      marginBottom: 30,\n      fontSize: 24,\n      color: refs.primeryBlackColor,\n    },\n  };\n});\n","import { createUseStyles } from 'react-jss';\nimport refs from '../../../styles/refs';\n\nexport const useStyles = createUseStyles(() => {\n  return {\n    History: {\n      display: 'flex',\n      alignItems: 'center',\n      width: 'calc(100% - 50px)',\n      // color: refs.primaryBlackColor50,\n      // fontSize: 14,\n    },\n\n    homeButton: {\n      cursor: 'pointer',\n      fill: refs.primaryBlackColor50,\n\n      '&:hover svg': {\n        fill: refs.primaryBlackColor75,\n      },\n    },\n\n    homeIcon: {\n      fill: refs.primaryBlackColor50,\n    },\n\n    fromButton: {\n      fontSize: 14,\n      cursor: 'pointer',\n\n      '& span': {\n        color: refs.primaryBlackColor50,\n      },\n\n      '&:hover span': {\n        color: refs.primaryBlackColor75,\n      },\n    },\n\n    codebox: {\n      fontSize: 14,\n      color: refs.primaryBlackColor50,\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n\n    arrowIcon: {\n      marginLeft: 10,\n      marginRight: 10,\n      width: 14,\n      height: 15,\n      fill: refs.primaryBlackColor25,\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n\n    currentPathname: {\n      color: refs.primaryBlackColor50,\n      fontSize: 14,\n\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n\n      '-webkit-touch-callout': 'none',\n      '-webkit-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-moz-user-select': 'none',\n      '-ms-user-select': 'none',\n      'user-select': 'none',\n    },\n  };\n});\n","import { useStyles } from './HistoryStyles';\nimport sprite from '../../../svg/sprite.svg';\n\nexport const ArrowIcon = () => {\n  const s = useStyles();\n\n  return (\n    <span className={s.arrowIcon}>\n      <svg width=\"14\" height=\"14\">\n        <use href={sprite + '#icon-arrow-right'}></use>\n      </svg>\n    </span>\n  );\n};\n\nexport const HomeIcon = ({ path }) => {\n  const s = useStyles();\n\n  return (\n    <span className={path === '/' ? s.homeIcon : null}>\n      <svg width=\"13\" height=\"13\">\n        <use href={sprite + '#icon-home'}></use>\n      </svg>\n    </span>\n  );\n};\n\n// export default ArrowIcon;\n","import { withRouter } from 'react-router-dom';\nimport { useStyles } from './HistoryStyles';\nimport { HomeIcon } from './Icons';\n\nexport const FromButton = withRouter(({ props, history }) => {\n  const s = useStyles();\n  const { stateFrom, fromPathname, createPathname } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={s.fromButton}\n      onClick={() => history.push(stateFrom)}\n    >\n      {createPathname(fromPathname)}\n    </button>\n  );\n});\n\nexport const HomeButton = withRouter(({ history, location }) => {\n  const s = useStyles();\n\n  return location.pathname !== '/' ? (\n    <button\n      type=\"button\"\n      className={s.homeButton}\n      onClick={() => history.push('/')}\n    >\n      <HomeIcon path={location.pathname} />\n    </button>\n  ) : (\n    <HomeIcon path={location.pathname} />\n  );\n});\n","import { withRouter } from 'react-router-dom';\nimport { useStyles } from './HistoryStyles';\nimport { ArrowIcon } from './Icons';\nimport { HomeButton, FromButton } from './Buttons';\n\nconst History = ({ history, location }) => {\n  // console.log('History location --->', location);\n\n  const s = useStyles();\n  const stateFrom = location.state?.from;\n  const fromPathname = location.state?.from.pathname.substr(1);\n  const currentPathname = location.pathname.substr(1);\n\n  const createPathname = pathname => {\n    return (\n      pathname && (\n        <span\n          className={\n            pathname === currentPathname\n              ? s.currentPathname\n              : pathname === fromPathname && null\n          }\n        >\n          {pathname?.includes('/') ? pathname?.split('/')[1] : pathname}\n        </span>\n      )\n    );\n  };\n\n  return (\n    <div className={s.History}>\n      <HomeButton />\n      <ArrowIcon />\n      {location.pathname !== '/' ? (\n        <FromButton props={{ stateFrom, fromPathname, createPathname }} />\n      ) : (\n        <span className={s.codebox}>{'codebox'}</span>\n      )}\n      {fromPathname && <ArrowIcon />}\n      {createPathname(currentPathname)}\n    </div>\n  );\n};\n\nexport default withRouter(History);\n","import s from './Information.module.scss';\nimport sprite from '../../../svg/sprite.svg';\n\nconst InformationBtn = ({ showInformation, toggleInformationModal }) => {\n  return showInformation ? (\n    <button className={s.Information__btn} onClick={toggleInformationModal}>\n      <svg width=\"14\" height=\"14\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </button>\n  ) : (\n    <button className={s.Information__btn} onClick={toggleInformationModal}>\n      <svg width=\"18\" height=\"18\">\n        <use href={sprite + '#icon-info'}></use>\n      </svg>\n    </button>\n  );\n};\n\nexport default InformationBtn;\n","import s from '../Information.module.scss';\n\nconst CurrentList = ({ information }) => {\n  return (\n    <ul className={s.Information__currentlist}>\n      <li className={s.Information__item}>\n        <span className={s.Information__itemKey}>{`View: `}</span>\n        {information.nesting !== 0 ? information?.view?.title : 'Home'}\n      </li>\n      {information.nesting === 2 && (\n        <li className={s.Information__item}>\n          <span className={s.Information__itemKey}>{`Feature: `}</span>\n          {information.feature.title}\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default CurrentList;\n","import { useContext } from 'react';\nimport s from '../Information.module.scss';\nimport Context from '../../../../Context';\n\nconst GeneralList = () => {\n  const { localState } = useContext(Context);\n\n  return (\n    <>\n      <span className={s.Information__title}>General:</span>\n\n      <ul className={s.Information__generalList}>\n        <li className={s.Information__generalItem}>\n          <div className={s.Information__generalValueWrap}>\n            <span className={s.Information__generalKey}>\n              Views:{' '}\n              <span className={s.Information__generalValue}>\n                {localState.quantity.views}\n              </span>\n            </span>\n            <span className={s.Information__generalKey}>\n              Features:{' '}\n              <span className={s.Information__generalValue}>\n                {localState.quantity.features - 1}\n              </span>\n            </span>\n          </div>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default GeneralList;\n","import s from '../Information.module.scss';\nimport CurrentList from './CurrentList';\nimport GeneralList from './GeneralList';\n\nconst InformationLists = ({ information }) => {\n  return (\n    <div className={s.Information__listWrap}>\n      <CurrentList information={information} />\n      <GeneralList />\n    </div>\n  );\n};\n\nexport default InformationLists;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Context from '../../../Context';\nimport s from './Information.module.scss';\nimport InformationBtn from './InformationBtn';\nimport InformationLists from './InformationLists';\nimport useDataIterator from '../../../hooks/useDataIterator';\n\nconst Information = ({ location }) => {\n  const [showInformation, setShowInformation] = useState(false);\n  const [information, setInformation] = useState(null);\n  const { localState, setLocalState, views } = useContext(Context);\n  const informationData = useDataIterator(location, views);\n\n  useEffect(() => setInformation(informationData), [location.pathname]);\n\n  useEffect(\n    () => setLocalState({ ...localState, ...information }),\n    [information],\n  );\n\n  const toggleInformationModal = () => setShowInformation(!showInformation);\n\n  return (\n    <div className={s.Information}>\n      <InformationBtn\n        showInformation={showInformation}\n        toggleInformationModal={toggleInformationModal}\n      ></InformationBtn>\n\n      {showInformation && <InformationLists information={information} />}\n    </div>\n  );\n};\n\nexport default withRouter(Information);\n","import s from './InfoPanel.module.scss';\nimport History from '../History';\nimport Information from '../../Markup/Information';\n\nconst InfoPanel = () => {\n  return (\n    <div className={s.infoPanel}>\n      <History />\n      <Information />\n    </div>\n  );\n};\n\nexport default InfoPanel;\n","import s from './Article.module.scss';\n\nconst Article = ({ children }) => (\n  <article className={s.Article}>{children}</article>\n);\n\nexport default Article;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoPanel\":\"InfoPanel_infoPanel__2Wnih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Article\":\"Article_Article__3XQP8\"};","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      username\n      email\n      token\n      role\n      createdAt\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CustomButton, CustomInput } from './uiElements';\nimport { LOGIN } from '../../graphql/mutation/user';\nimport s from './Admin.module.scss';\nimport sprite from '../../svg/sprite.svg';\nimport refs from '../../styles/refs';\n\nconst Login = ({ setCodeboxToken }) => {\n  const [userRole, setUserRole] = useState('guest');\n  const [loginUsername, setLoginUsername] = useState('Guest');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const [hidePassword, setHidePassword] = useState(true);\n\n  const [gqlLogin] = useMutation(LOGIN, {\n    variables: {\n      username: loginUsername,\n      password: loginPassword,\n    },\n  });\n\n  const login = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await gqlLogin({\n        variables: {\n          username: loginUsername,\n          password: loginPassword,\n        },\n      });\n\n      console.log('login token:', data.login);\n\n      if (data) {\n        localStorage.setItem('codeboxToken', data.login.token);\n        setCodeboxToken(data.login.token);\n      }\n\n      setLoginUsername('');\n      setLoginPassword('');\n      setLoginError('');\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > login:', err.message);\n      setLoginError(err.message);\n    }\n  };\n\n  const toggleInputs = role => {\n    console.log('role:', role);\n    setUserRole(role);\n    setLoginUsername(role === 'admin' ? 'Admin' : role === 'guest' && 'Guest');\n  };\n\n  const togglePasswordDisplay = () => setHidePassword(!hidePassword);\n\n  console.log('hidePassword', hidePassword);\n\n  return (\n    <div className={s.Login}>\n      <form className={s.Login__form} onSubmit={e => login(e)}>\n        <h2 className={s.Login__title}>\n          {userRole === 'guest' ? 'Guest' : userRole === 'admin' && 'Admin'}\n        </h2>\n\n        {userRole === 'guest' ? (\n          <CustomInput\n            className={'admin-login-password-input'}\n            padding={'15px'}\n            margin={'0 0 30px'}\n            width={'100%'}\n            border={`1px solid ${refs.primaryTextColor}`}\n            borderRadius={'4px'}\n            type={hidePassword ? 'password' : 'text'}\n            placeholder={'password'}\n            value={loginPassword}\n            onChange={e => {\n              setLoginPassword(e.target.value);\n              setLoginError('');\n            }}\n          />\n        ) : (\n          userRole === 'admin' && (\n            <CustomInput\n              className={'admin-login-password-input'}\n              padding={'15px'}\n              margin={'0 0 30px'}\n              width={'100%'}\n              border={`1px solid ${refs.primaryTextColor}`}\n              borderRadius={'4px'}\n              type={hidePassword ? 'password' : 'text'}\n              placeholder={'password'}\n              value={loginPassword}\n              onChange={e => setLoginPassword(e.target.value)}\n            />\n          )\n        )}\n\n        <div\n          className={s.Login__passwordEye}\n          onClick={() => togglePasswordDisplay()}\n        >\n          <svg width=\"20\" height=\"20\" fill={refs.primaryTextColor}>\n            {hidePassword ? (\n              <use href={sprite + '#icon-eye-blocked'}></use>\n            ) : (\n              <use href={sprite + '#icon-eye'}></use>\n            )}\n          </svg>\n        </div>\n\n        <span className={s.Login__error}>{loginError}</span>\n\n        <CustomButton\n          className={'admin-login-btn'}\n          display={'block'}\n          padding={'15px'}\n          margin={'0 0 30px'}\n          width={'100%'}\n          borderRadius={'4px'}\n          type={'submit'}\n        >\n          Login\n        </CustomButton>\n\n        {userRole === 'guest' ? (\n          <span\n            className={s.Login__toggleLink}\n            onClick={() => toggleInputs('admin')}\n          >\n            Administrator\n          </span>\n        ) : (\n          userRole === 'admin' && (\n            <span\n              className={s.Login__toggleLink}\n              onClick={() => toggleInputs('guest')}\n            >\n              Guest\n            </span>\n          )\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import { CustomButton } from './uiElements';\n\nconst Logout = ({ setCodeboxToken }) => {\n  const removeToken = () => {\n    localStorage.setItem('codeboxToken', '');\n    setCodeboxToken('');\n  };\n\n  return (\n    <CustomButton\n      className={'admin-logout-btn'}\n      padding={'10px 20px'}\n      borderRadius={'4px'}\n      onClick={removeToken}\n    >\n      Logout\n    </CustomButton>\n  );\n};\n\nexport default Logout;\n","import { CustomButton } from './uiElements';\nimport sprite from '../../svg/sprite.svg';\n\nconst UpdateViewButton = ({ toggleModal }) => (\n  <CustomButton\n    className={'admin-delete-view-button-btn'}\n    margin={'0 0 10px 0'}\n    width={'20px'}\n    height={'20px'}\n    borderRadius={'4px'}\n    onClick={() => toggleModal(true)}\n  >\n    <svg width=\"10\" height=\"10\" fill=\"white\">\n      <use href={sprite + '#icon-edit'}></use>\n    </svg>\n  </CustomButton>\n);\n\nexport default UpdateViewButton;\n","import { CustomButton } from './uiElements';\nimport sprite from '../../svg/sprite.svg';\n\nconst DeleteViewButton = ({ id, toggleAppModal }) => {\n  const deleteView = async () =>\n    toggleAppModal({ content: 'delete-view-btn', id });\n\n  return (\n    <CustomButton\n      className={'admin-delete-view-button-btn'}\n      width={'20px'}\n      height={'20px'}\n      borderRadius={'4px'}\n      onClick={deleteView}\n    >\n      <svg width=\"10\" height=\"10\" fill=\"white\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </CustomButton>\n  );\n};\n\nexport default DeleteViewButton;\n","import s from './Admin.module.scss';\nimport { CardModalInput, CustomButton } from './uiElements';\nimport refs from '../../styles/refs';\n\nconst UpdateViewCardModal = ({\n  view,\n  updateGqlViewTitle,\n  updateGqlViewPath,\n  setUpdateGqlViewTitle,\n  setUpdateGqlViewPath,\n  updateView,\n  toggleCardModal,\n}) => {\n  return (\n    <form className={'admin-update-view-form'} onSubmit={e => updateView(e)}>\n      <div className={s.cardModal__contentRow}>id: {view.id}</div>\n      <div className={s.cardModal__contentRow}>\n        {`title: `}\n        {\n          <CardModalInput\n            className={'admin-update-view-title-btn'}\n            padding={0}\n            width={'250px'}\n            color={refs.activeLinkColor}\n            backgroundColor={'transparent'}\n            border={'none'}\n            outline={'none'}\n            placeholder={'Title'}\n            value={updateGqlViewTitle}\n            onChange={e => setUpdateGqlViewTitle(e.target.value)}\n          />\n        }\n      </div>\n      <div className={s.cardModal__contentRow}>\n        {`path: `}\n        {\n          <CardModalInput\n            className={'admin-update-view-path-btn'}\n            padding={0}\n            width={'250px'}\n            color={refs.activeLinkColor}\n            border={'none'}\n            outline={'none'}\n            backgroundColor={'transparent'}\n            placeholder={'path'}\n            value={updateGqlViewPath}\n            onChange={e => setUpdateGqlViewPath(e.target.value)}\n          />\n        }\n      </div>\n\n      <div className={s.cardModal__btnWrap}>\n        <CustomButton\n          className={'admin-update-view-btn'}\n          display={'block'}\n          padding={'3px 30px'}\n          margin={'0 10px 0 0'}\n          borderRadius={'2px'}\n          fontSize={'12px'}\n          type={'submit'}\n          onClick={e => updateView(e)}\n        >\n          Update\n        </CustomButton>\n        <CustomButton\n          className={'admin-update-view-close-btn'}\n          padding={'3px 30px'}\n          borderRadius={'2px'}\n          fontSize={'12px'}\n          type={'submit'}\n          onClick={() => toggleCardModal(false)}\n        >\n          Cancel\n        </CustomButton>\n      </div>\n    </form>\n  );\n};\n\nexport default UpdateViewCardModal;\n","import { useMutation } from '@apollo/client';\nimport { UPDATE_VIEW } from '../../graphql/mutation/view';\nimport UpdateViewCardModal from './UpdateViewCardModal';\n\nconst UpdateView = ({\n  view,\n  updateGqlViewTitle,\n  updateGqlViewPath,\n  setUpdateGqlViewTitle,\n  setUpdateGqlViewPath,\n  toggleCardModal,\n  refetch,\n}) => {\n  const [updateGqlView] = useMutation(UPDATE_VIEW, {\n    variables: {\n      id: view.id,\n      input: { title: updateGqlViewTitle, path: updateGqlViewPath },\n    },\n  });\n\n  const updateView = async e => {\n    e.preventDefault();\n    console.log('id:', view.id);\n\n    try {\n      const { data } = await updateGqlView();\n\n      console.log('updateView !!!', data.updateView);\n\n      refetch();\n      toggleCardModal(false);\n    } catch (err) {\n      console.log('ERROR in GqlFormAndList > updateView:', err.message);\n    }\n  };\n\n  return (\n    <UpdateViewCardModal\n      view={view}\n      updateGqlViewTitle={updateGqlViewTitle}\n      updateGqlViewPath={updateGqlViewPath}\n      setUpdateGqlViewTitle={setUpdateGqlViewTitle}\n      setUpdateGqlViewPath={setUpdateGqlViewPath}\n      updateView={updateView}\n      toggleCardModal={toggleCardModal}\n    />\n  );\n};\n\nexport default UpdateView;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport s from './Admin.module.scss';\nimport UpdateViewButton from './UpdateViewButton';\nimport DeleteViewButton from './DeleteViewButton';\nimport UpdateView from './UpdateView';\n\nconst ViewItemCard = ({ view, toggleAppModal, refetch }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [updateGqlViewTitle, setUpdateGqlViewTitle] = useState('');\n  const [updateGqlViewPath, setUpdateGqlViewPath] = useState('');\n\n  useEffect(() => {\n    setUpdateGqlViewTitle(view.title);\n    setUpdateGqlViewPath(view.path);\n  }, []);\n\n  const toggleCardModal = value => setShowModal(value);\n\n  return (\n    <>\n      {!showModal ? (\n        <>\n          <div className={s.ViewList__card}>\n            <div className={s.card__contentRow}>id: {view?.id}</div>\n            <div className={s.card__contentRow}>title: {view?.title}</div>\n            <div className={s.card__contentRow}>path: {view?.path}</div>\n          </div>\n\n          <div className={s.ViewList__btnWrap}>\n            <UpdateViewButton toggleModal={toggleCardModal} />\n            <DeleteViewButton id={view?.id} toggleAppModal={toggleAppModal} />\n          </div>\n        </>\n      ) : (\n        <div className={s.ViewList__cardModal}>\n          <UpdateView\n            view={view}\n            updateGqlViewTitle={updateGqlViewTitle}\n            updateGqlViewPath={updateGqlViewPath}\n            setUpdateGqlViewTitle={setUpdateGqlViewTitle}\n            setUpdateGqlViewPath={setUpdateGqlViewPath}\n            toggleCardModal={toggleCardModal}\n            refetch={refetch}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ViewItemCard;\n","import { useEffect, useState, useContext } from 'react';\nimport s from './Admin.module.scss';\nimport Context from '../../Context';\nimport ViewItemCard from './ViewItemCard';\n\nconst ViewList = ({ searchResult }) => {\n  const [data, setData] = useState(null);\n\n  const { allViews, toggleAppModal, refetch } = useContext(Context);\n\n  useEffect(\n    () => (!searchResult ? setData(allViews) : setData(searchResult)),\n    [allViews, searchResult],\n  );\n\n  return (\n    <div className={s.ViewList__wrap}>\n      <ul className={s.ViewList__list}>\n        {data?.map(view => (\n          <li className={s.ViewList__item} key={view.path}>\n            <ViewItemCard\n              view={view}\n              toggleAppModal={toggleAppModal}\n              refetch={refetch}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ViewList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport s from './Admin.module.scss';\nimport sprite from '../../svg/sprite.svg';\nimport refs from '../../styles/refs';\nimport { CustomInput } from './uiElements';\n\nconst Search = ({ allViews, setSearchResult }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => resultHandler(searchValue), [allViews]);\n\n  const resultHandler = value =>\n    setSearchResult(allViews?.filter(view => view.id.includes(value)));\n\n  const searchValueHandler = e => {\n    setSearchValue(e.target.value);\n    resultHandler(e.target.value);\n  };\n\n  return (\n    <div className={s.Search__wrap}>\n      <CustomInput\n        padding={'10px 10px 10px 35px'}\n        width={'100%'}\n        border={`1px solid ${refs.primaryTextColor}`}\n        borderRadius={'4px'}\n        placeholder={'enter view id'}\n        value={searchValue}\n        onChange={e => searchValueHandler(e)}\n      />\n\n      <div className={s.Search__iconWrap}>\n        <svg width=\"14\" height=\"14\" fill={refs.primaryTextColor}>\n          <use href={sprite + '#icon-search'}></use>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import { useContext } from 'react';\nimport Context from '../../Context';\nimport { CustomButton } from './uiElements';\nimport sprite from '../../svg/sprite.svg';\n\nconst CreateViewButton = () => {\n  const { toggleAppModal } = useContext(Context);\n\n  return (\n    <CustomButton\n      className={'admin-create-view-btn'}\n      padding={'13px'}\n      margin={'0 20px 0 0'}\n      borderRadius={'50%'}\n      transform={'rotate(45deg)'}\n      type={'button'}\n      onClick={() => toggleAppModal({ content: 'create-view-btn' })}\n    >\n      <svg width=\"12\" height=\"12\" fill=\"white\">\n        <use href={sprite + '#icon-close'}></use>\n      </svg>\n    </CustomButton>\n  );\n};\n\nexport default CreateViewButton;\n","import { useState } from 'react';\nimport s from './Admin.module.scss';\nimport Logout from './Logout';\nimport ViewList from './ViewList';\nimport Search from './Search';\nimport CreateViewButton from './CreateViewButton';\n\nconst AdminDashboardContent = ({ allViews, setCodeboxToken, refetch }) => {\n  const [searchResult, setSearchResult] = useState(allViews);\n\n  return (\n    <div className={s.AdminDashboard__contentWrap}>\n      <div className={s.content__btnWrap}>\n        <CreateViewButton refetch={refetch} />\n        <Logout setCodeboxToken={setCodeboxToken} />\n      </div>\n      <Search allViews={allViews} setSearchResult={setSearchResult} />\n      <ViewList searchResult={searchResult} />\n    </div>\n  );\n};\n\nexport default AdminDashboardContent;\n","import { useEffect, useState, useContext, useMemo } from 'react';\nimport s from './Admin.module.scss';\nimport Context from '../../Context';\nimport Login from './Login';\nimport AdminDashboardContent from './AdminDashboardContent';\n// import Logout from './Logout';\n// import ViewList from './ViewList';\n// import CreateViewButton from './CreateViewButton';\n\nconst AdminDashboard = () => {\n  const [codeboxToken, setCodeboxToken] = useState('');\n\n  const { loading, allViews, refetch } = useContext(Context);\n\n  useMemo(() => allViews && console.log('allViews:', allViews), [allViews]); // *\n\n  useEffect(() => setCodeboxToken(localStorage.getItem('codeboxToken')), []);\n\n  return (\n    <div className={s.AdminDashboard}>\n      {!loading ? (\n        <>\n          {!codeboxToken ? (\n            <Login setCodeboxToken={setCodeboxToken} />\n          ) : (\n            <AdminDashboardContent\n              allViews={allViews}\n              setCodeboxToken={setCodeboxToken}\n              refetch={refetch}\n            />\n          )}\n        </>\n      ) : (\n        <div className={s.AdminDashboard__loadingWrap}>\n          <span>{`Heroku server: zzz.. ☆(◡.◔)★ ...`}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n","import { withRouter } from 'react-router-dom';\nimport InfoPanel from '../components/Markup/InfoPanel';\nimport { useStyles } from './viewsStyles';\nimport Article from '../components/Markup/Article';\nimport AdminDashboard from '../components/Admin';\n\nconst ComponentView = () => {\n  const viewTitle = 'Admin';\n  const s = useStyles();\n\n  return (\n    <>\n      <InfoPanel />\n      <Article>\n        <h1 className={s.viewTitle}>{viewTitle}</h1>\n        <AdminDashboard />\n      </Article>\n    </>\n  );\n};\n\nexport default withRouter(ComponentView);\n"],"sourceRoot":""}